name: Archive PR Files

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        default: '1'

jobs:
  archive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 500

      - name: Setup GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get latest commit SHA
        run: |
          pr_number=${{ github.event.inputs.pr_number }}
          latest_commit_sha=$(gh pr view $pr_number --json commits --jq '.commits[-1].oid')
          echo "latest_commit_sha=$latest_commit_sha" >> $GITHUB_ENV

      - name: Checkout specific commit
        run: |
          latest_commit_sha=${{ env.latest_commit_sha }}
          git checkout $latest_commit_sha

      - name: Get previous commit SHA
        run: |
          pr_number=${{ github.event.inputs.pr_number }}
          first_commit_sha=$(gh pr view $pr_number --json commits --jq '.commits[0].oid')
          previous_commit_sha=$(git rev-parse $first_commit_sha^)
          echo "previous_commit_sha=$previous_commit_sha" >> $GITHUB_ENV

      - name: Fetch pull request files
        run: |
          dir_name=release_resources
          echo "dir_name=$dir_name" >> $GITHUB_ENV
          mkdir -p $dir_name

          latest_commit_sha=${{ env.latest_commit_sha }}
          previous_commit_sha=${{ env.latest_commit_sha }}
          git diff --name-only --diff-filter=A $previous_commit_sha $latest_commit_sha > $dir_name/added_files.txt
          git diff --name-only --diff-filter=M $previous_commit_sha $latest_commit_sha > $dir_name/modified_files.txt
          git diff --name-only --diff-filter=D $previous_commit_sha $latest_commit_sha > $dir_name/deleted_files.txt

      - name: added files
        run: |
          dir_name=${{ env.dir_name }}
          child_dir_name=$dir_name/added_files
          mkdir -p $child_dir_name
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              mkdir -p "$(dirname "$child_dir_name/$file")"
              cp "$file" "$child_dir_name/$file"
            fi
          done < $dir_name/added_files.txt

      - name: modified files
        run: |
          dir_name=${{ env.dir_name }}
          child_dir_name=$dir_name/modified_files
          mkdir -p $child_dir_name
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              mkdir -p "$(dirname "$child_dir_name/$file")"
              cp "$file" "$child_dir_name/$file"
            fi
          done < $dir_name/modified_files.txt

      - name: Zip artifact
        run: zip -r ${{ env.dir_name }}.zip ${{ env.dir_name }}

      - name: Fetch pull request branch name
        run: |
          pr_number=${{ github.event.inputs.pr_number }}
          branch_name=$(gh pr view $pr_number --json headRefName -q .headRefName)
          branch_name_escaped=$(echo "$branch_name" | sed 's|/|_|g')
          echo "branch_name=$branch_name" >> $GITHUB_ENV
          echo "branch_name_escaped=$branch_name_escaped" >> $GITHUB_ENV

      - name: Upload files artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr#${{ github.event.inputs.pr_number }}-${{ env.branch_name_escaped }}
          path: ${{ env.dir_name }}.zip
