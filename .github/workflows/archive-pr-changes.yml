name: Archive PR Files

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        default: '1'

jobs:
  archive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch pull request branch name
        id: get_branch
        run: |
          pr_number=${{ github.event.inputs.pr_number }}
          branch_name=$(gh pr view $pr_number --json headRefName -q .headRefName)
          branch_name_escaped=$(echo "$branch_name" | sed 's|/|_|g')
          echo "branch_name=$branch_name" >> $GITHUB_ENV
          echo "branch_name_escaped=$branch_name_escaped" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch pull request files
        id: fetch_files
        run: |
          dir_name=release_resources
          mkdir -p $dir_name
          echo "dir_name=$dir_name" >> $GITHUB_ENV
          pr_number=${{ github.event.inputs.pr_number }}
          git fetch origin pull/$pr_number/head:pr-$pr_number
          git diff --name-only --diff-filter=A pr-$pr_number origin/develop > $dir_name/added_files.txt
          git diff --name-only --diff-filter=M pr-$pr_number origin/develop > $dir_name/modified_files.txt
          git diff --name-only --diff-filter=D pr-$pr_number origin/develop > $dir_name/deleted_files.txt

          # test
          base_branch=$(gh pr view $pr_number --json baseRefName -q .baseRefName)
          branch_name=$(gh pr view $pr_number --json headRefName -q .headRefName)
          echo "$base_branch"
          echo "$branch_name"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: added files
        run: |
          dir_name=${{ env.dir_name }}
          child_dir_name=$dir_name/added_files
          mkdir -p $child_dir_name
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              mkdir -p "$(dirname "$child_dir_name/$file")"
              cp "$file" "$child_dir_name/$file"
            fi
          done < $dir_name/added_files.txt

      - name: modified files
        run: |
          dir_name=${{ env.dir_name }}
          child_dir_name=$dir_name/modified_files
          mkdir -p $child_dir_name
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              mkdir -p "$(dirname "$child_dir_name/$file")"
              cp "$file" "$child_dir_name/$file"
            fi
          done < $dir_name/modified_files.txt

      - name: Zip artifact
        run: zip -r ${{ env.dir_name }}.zip ${{ env.dir_name }}

      - name: Upload files artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr#${{ github.event.inputs.pr_number }}-${{ env.branch_name_escaped }}
          path: ${{ env.dir_name }}.zip
